#!/bin/sh

#### CONFIG HERE ####
# max width of text. Try to set this to the maximum width a single line 
# of text can be in your notification. If you want this to be dynamically set 
# based on the statistics width, set it to "dynamic"
width=42
# the message to show under the stats. Options are fortune, player, or smart
# if anything else, that will be displayed instead
message=smart

## list of stats you wish the script to show.
# options include memory, battery, uptime, date, os
statslist="memory battery uptime date"

##### END CONFIG ####

uptime_stat=$(uptime -p | cut -c 4-)
user_stat=$(whoami)
hostname_stat=$(uname -a | cut -d' ' -f2)
kernel_stat=$(uname -a | cut -d' ' -f2)
bat_percent_stat=$(cat /sys/class/power_supply/BAT1/capacity)
bat_stat=$(cat /sys/class/power_supply/BAT1/status)
date_stat=$(date +'%a %b %d %l:%M %p')

title="${user_stat}@${hostname_stat}"

while IFS=':k '  read -r key val _; do
    case $key in
        MemTotal)
            mem_used=$((mem_used + val))
            mem_full=$val;;
        Shmem) mem_used=$((mem_used + val));;
        MemFree|Buffers|Cached|SReclaimable) mem_used=$((mem_used - val));;
    esac
done < /proc/meminfo
mempercent_stat="$(echo 100 ${mem_used} \* ${mem_full} / p | dc)"

get_os() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        os=$PRETTY_NAME
    elif command -v lsb_release; then
        os=$(lsb_release -d| sed "s|Description:||;s| {2,}||g")
    else
        os=$(uname -s)
    fi
    echo $os
}

player() {
    player_status=$(playerctl --player=%any,firefox,chromium status 2> /dev/null)

    if [ "$player_status" = "Playing" ]; then
        echo " $(playerctl metadata --player=%any,firefox,chromium --format '{{artist}} - {{title}}')"
    elif [ "$player_status" = "Paused" ]; then
        echo " $(playerctl metadata --player=%any,firefox,chromium --format 'Paused | {{artist}} - {{title}}')"
    else
        echo ""
    fi
}

getstat() {
    case $1 in 
        "memory")
            echo "<b>Memory</b>~~${mempercent_stat}%"
        ;;
        "battery")
            echo "<b>Battery</b>~~${bat_percent_stat}% ${bat_stat}"
        ;;
        "uptime")
            echo "<b>Uptime</b>~~${uptime_stat}"
        ;;
        "date")
            echo "<b>Date</b>~~${date_stat}"
        ;;
        "os")
            echo "<b>OS</b>~~$(get_os)"
        ;;
        *)
            echo "$1 not found."
        ;;
    esac
}

for stat in $statslist; do
    stats="${stats}\n$(getstat $stat)"
done

stats="$(echo ${stats} | column -t -s'~~')"

if [ "${width}" = "dynamic" ]; then
    # get width of longest line in stats, minus formatting
    width=$(echo "${stats}" | sed 's|<[^>]*>||g' | wc -L)
fi


line=$(printf '%0.s-' $(seq 1 $width))

fortune=$(fortune -s | sed "
s| {2}||g;  # remove instances of more than 2 spaces
s|\t||g;    # remove tab characters
s,(<|>),,g; # remove '<' and '>' because Awesomewm's notification
            # formatting is dumb and having thoes chars breaks it
")


case $message in 
    "fortune")
        body="$stats\n$line\n$fortune"
    ;;
    "player")
        body="$stats\n$line\n$(player)"
    ;;
    "smart")
        if [ "$(player)" = "" ]; then 
            body="$stats\n$line\n$fortune"
        else
            body="$stats\n$line\n$(player)"
        fi
    ;;
    *)
        body="$stats\n$line\n$message"
    ;;
esac


notify-send "${title}" "${body}"
